name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm install

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set environment variables
        run: echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> $GITHUB_ENV

      - name: Build and push Docker images
        run: |
          docker-compose -f docker-compose.yml build --progress=plain
          docker-compose -f docker-compose.yml push
      
      - name: Verify Pushed Image
        run: docker pull sidvish/edc-steal-share:latest

      - name: Create .pem file from secret
        run: |
          echo "${{ secrets.EC2_KEY_BASE64 }}" | base64 -d > edc-steal-share-aws-ec2-key.pem
          chmod 600 edc-steal-share-aws-ec2-key.pem

      - name: Add EC2 Host Key to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
          
      - name: Test SSH Connection
        run: |
          ssh -i edc-steal-share-aws-ec2-key.pem ubuntu@${{ secrets.EC2_HOST }} "echo 'SSH Connection Successful!'"

      - name: Deploy to AWS EC2
        uses: appleboy/ssh-action@v0.1.2
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: edc-steal-share-aws-ec2-key.pem
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/edc-steal-share:latest
            docker stop edc-steal-share || true
            docker rm edc-steal-share || true
            docker run -d -p 8080:8080 --name edc-steal-share ${{ secrets.DOCKER_USERNAME }}/edc-steal-share:latest
